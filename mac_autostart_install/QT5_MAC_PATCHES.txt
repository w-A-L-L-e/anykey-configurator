for bugfixing:
  https://wiki.qt.io/Qt_5.9.5_Known_Issues
  --- a/src/platformsupport/fontdatabases/mac/qfontengine_coretext.mm
+++ b/src/platformsupport/fontdatabases/mac/qfontengine_coretext.mm
@@ -824,7 +824,7 @@ void QCoreTextFontEngine::getUnscaledGlyph(glyph_t glyph, QPainterPath *path, gl

 QFixed QCoreTextFontEngine::emSquareSize() const
 {
-    return QFixed::QFixed(int(CTFontGetUnitsPerEm(ctfont)));
+    return QFixed(int(CTFontGetUnitsPerEm(ctfont)));
 }

 also another one in painting (just comment the 3 action_required lines)
 so patch is:
 /Users/wschrep/QT5/5.9/Src/qtbase/src/gui/qcoregraphics.mm 
 -> find lines which have compile error and uncomment them for now...
 alternatively look at 5.9.5 version...





for getting a smaller static build:
http://web.archive.org/web/20161222125623/http://www.formortals.com/build-qt-static-small-microsoft-intel-gcc-compiler/


# comemnt out transform line as this gives error on line 268:
./qt3d/src/3rdparty/assimp/code/BlenderModifier.cpp 

vi qt3d/src/3rdparty/assimp/code/FBXDocument.cpp
here change mem_fun into mem_fn on 2 lines

vi qt3d/src/3rdparty/assimp/code/FBXMeshGeometry.cpp -> line 359 I just commented this negative shit out ;)

vi qt3d/src/3rdparty/assimp/code/OgreParsingUtils.h  -> ptr_fun just ditch em and replace like so

/// Trim from start
static inline std::string &TrimLeft(std::string &s, bool newlines = true)
{
    if (!newlines)
    {
        s.erase(s.begin(), std::find_if(s.begin(), s.end(), [](int c) {return !std::isspace(c);}));  //      std::not1(std::ptr_fun(Assimp::IsSpace<char>))));
    }
    else
    {
        s.erase(s.begin(), std::find_if(s.begin(), s.end(), [](int c) {return !std::isspace(c);}));         //std::not1(std::ptr_fun(Assimp::IsSpaceOrNewLine<char>))));
    }
    return s;
}

/// Trim from end
static inline std::string &TrimRight(std::string &s, bool newlines = true)
{
    if (!newlines)
    {
        s.erase(std::find_if(s.rbegin(), s.rend(), [](int c) {return !std::isspace(c);}   ).base(),s.end());
    }
    else
    {
        //s.erase(s.begin(), std::find_if(s.begin(), s.end(), std::not1(std::ptr_fun(Assimp::IsSpaceOrNewLine<char>))));
        s.erase(s.begin(), std::find_if(s.begin(), s.end(), [](int c) {return !std::isspace(c);}  ));
    }
    return s;
}



vi qt3d/src//3rdparty/assimp/code/LWOAnimation.cpp:165:  






Cast these in some files for bluetooth to avoid errorsa
 vi ./qtconnectivity/src/bluetooth/osx/osxbtledeviceinquiry.mm line 240 cast it to centralmanager

 same line 1024 in this file:
./qtconnectivity/src/bluetooth/osx/osxbtcentralmanager.mm


    const CBCentralManagerState state = (CBCentralManagerState)central.state;

DISABLED this 3dparty by moving code out into a disabled folder and hacking a mostly empty .pro file
/Users/wschrep/QT5/5.9/Src/qtlocation/src/3rdparty/mapbox-gl-native



SCRIPT PATCHES

cd /Users/wschrep/QT5/5.9/Src/qtscript/src

vi 3rdparty/javascriptcore/JavaScriptCore/wtf/OwnPtr.h
replace auto_ptr with unique_ptr fixes errors

vi 3rdparty/javascriptcore/JavaScriptCore/wtf/VectorTraits.h 
replace auto_ptr with unique_ptr

vi 3rdparty/javascriptcore/JavaScriptCore/parser/Nodes.h
replace auto_ptr with unique_ptr

vi 3rdparty/javascriptcore/JavaScriptCore/parser/Nodes.h
// commented line 1392 (just to get it compiling... probably breaks stuff...)!!!!!

vi 3rdparty/javascriptcore/JavaScriptCore/parser/Parser.cpp
again auto_ptr to unique

vi 3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/Collator.h
vi 3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/CollatorDefault.cpp
again auto_ptr to unique


